{{- $root := . -}}
{{ if .Values.openunison.naas.workflows.new_namespace.use_default }}
---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: new-k8s-namespace
  namespace: {{ .Release.Namespace }}
spec:
  description: Create New Namespace
  inList: false
  label: Create New Namespace
  orgId: 04901973-5f4c-46d9-9e22-55e88e168776
  tasks: |-
           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.CopyFromUserToRequest
             params:
               attribute:
               - nameSpace
               - cluster
               {{ if .Values.openunison.naas.groups.external.enabled }}
               {{ range $role := .Values.openunison.naas.groups.default }}
               - {{ $role.external.fieldName }}
               {{ end }}
               {{ range $role := .Values.openunison.naas.groups.roles }}
               - {{ $role.external.fieldName }}
               {{ end }}
               {{ if .Values.openunison.naas.groups.internal.enabled }}
               - enableInternal
               {{ end }}
               {{ end }}
               {{ range $attr := .Values.openunison.naas.forms.new_namespace.additional_attributes }}
               - {{ $attr.name }}
               {{ end }}
               keepInUser: "false"

           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.LoadAttributes
             params:
               nameAttr: uid
               name: 
               - givenName
               - sn
               - mail

          {{ if not .Values.openunison.naas.groups.external.enabled }}
           - taskType: addAttribute
             name: enableInternal
             value: enabled
             addToRequest: true
          {{ else }}
          {{ if not .Values.openunison.naas.groups.internal.enabled }}
           - taskType: addAttribute
             name: enableInternal
             value: disabled
             addToRequest: true
          {{ end }}
          {{ end }}

          {{ if .Values.openunison.naas.workflows.new_namespaces.pre_run_workflow }}
           - taskType: callWorkflow
             name: {{ .Values.openunison.naas.workflows.new_namespaces.pre_run_workflow }}
          {{ end }}

           - taskType: customTask
             className: com.tremolosecurity.provisioning.tasks.CheckForGit
             params: {}


           - taskType: approval
             emailTemplate: A new namespace has been requested
             mailAttr: mail
             failureEmailSubject: Namespace not approved
             failureEmailMsg: |-
               Because:
               ${reason}
             label: Create New Namespace - $cluster$ - $nameSpace$
             approvers:
             - scope: group
               constraint: cn=administrators{{ .Values.openunison.naas.groups.external.suffix }},ou=groups,ou=shadow,o=Tremolo
             - scope: group
               constraint: cn=administrators{{ .Values.openunison.naas.groups.internal.suffix }},ou=groups,ou=shadow,o=Tremolo
             onSuccess:
             
             
             {{ if .Values.openunison.naas.groups.internal.enabled }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 target: jitdb
                 name: approvers-k8s-$cluster$-$nameSpace$
                 attributes:
                 - unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - unison.group.create.param.2=Approve access to $cluster$ $nameSpace$
             
             {{ range $role := .Values.openunison.naas.groups.default }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 target: jitdb
                 name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.internal.suffix }}
                 attributes:
                 - unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - unison.group.create.param.2={{ $role.description }}
             {{ end }}
             {{ range $role := .Values.openunison.naas.groups.roles }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 target: jitdb
                 name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.internal.suffix }}
                 attributes:
                 - unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - unison.group.create.param.2={{ $role.description }}
             {{ end }}
            
            
            
            {{ end }}

            {{ if .Values.openunison.naas.groups.external.enabled }}

             {{ range $role := .Values.openunison.naas.groups.default }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 target: jitdb
                 name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.external.suffix }}
                 attributes:
                 - unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - unison.group.create.param.2={{ $role.description }}

             # create group mapping
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
                 targetName: k8s
                 template: |-
                    kind: GroupMetaData
                    apiVersion: openunison.tremolo.io/v1
                    metadata:
                      name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace$
                      namespace: {{ $root.Release.Namespace }}
                      labels:
                        name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace$
                        app.kubernetes.io/name: openunison
                        app.kubernetes.io/instance: openunison-{{ $root.Release.Name }}
                        app.kubernetes.io/component: openunison-groupmetadata
                        app.kubernetes.io/part-of: openunison
                      annotations:
                        tremolo.io/managedByGit: "$useGit$"
                    spec:
                      groupName: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.external.suffix }}
                      externalName: "${{ $role.external.fieldName }}$"
                 kind: GroupMetaData
                 url: /apis/openunison.tremolo.io/v1/namespaces/{{ $root.Release.Namespace }}/groupmetadatas
                 srcType: yaml
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-cluster-k8s-$nameSpace$
                 path: /yaml/ns/$nameSpace$/groupmetadatas/k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace$.yaml
             {{ end }}
             {{ range $role := .Values.openunison.naas.groups.roles }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 target: jitdb
                 name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.external.suffix }}
                 attributes:
                 - unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - unison.group.create.param.2={{ $role.description }}

             # create group mapping
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
                 targetName: k8s
                 template: |-
                    kind: GroupMetaData
                    apiVersion: openunison.tremolo.io/v1
                    metadata:
                      name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace$
                      namespace: {{ $root.Release.Namespace }}
                      labels:
                        name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace$
                        app.kubernetes.io/name: openunison
                        app.kubernetes.io/instance: openunison-{{ $root.Release.Name }}
                        app.kubernetes.io/component: openunison-groupmetadata
                        app.kubernetes.io/part-of: openunison
                      annotations:
                        tremolo.io/managedByGit: "$useGit$"
                    spec:
                      groupName: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.external.suffix }}
                      externalName: "${{ $role.external.fieldName }}$"
                 kind: GroupMetaData
                 url: /apis/openunison.tremolo.io/v1/namespaces/{{ $root.Release.Namespace }}/groupmetadatas
                 srcType: yaml
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-cluster-k8s-$nameSpace$
                 path: /yaml/ns/$nameSpace$/groupmetadatas/k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace$.yaml
             {{ end }}

            
            {{ end }}


                 
             - taskType: mapping
               strict: true
               map:
                 - targetAttributeName: uid
                   targetAttributeSource: uid
                   sourceType: user
               onSuccess:
               {{ if .Values.openunison.naas.groups.internal.enabled }}
               - taskType: addGroup
                 name: approvers-k8s-$cluster$-$nameSpace$
                 remove: false
               - taskType: addGroup
                 name: k8s-namespace-administrators-$cluster$-$nameSpace${{ .Values.openunison.naas.groups.internal.suffix }}
                 remove: false
               - taskType: provision
                 sync: false
                 target: jitdb
                 setPassword: false
                 onlyPassedInAttributes: false
                 attributes: ["uid"]
              {{ end }}

            {{ if .Values.openunison.naas.workflows.new_namespaces.pre_run_workflow }}
             - taskType: callWorkflow
               name: {{ .Values.openunison.naas.workflows.new_namespaces.pre_provision_workflow }}
            {{ end }}

             # GitOps - Create SSH Key for Namespace
             - taskType: ifAttrHasValue
               name: useGit
               value: "true"
               onSuccess:
               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
                 params:
                   targetName: k8s
                   template: |-
                     kind: Secret
                     apiVersion: v1
                     metadata:
                       name: sshkey-namespace-$cluster$-$nameSpace$
                       labels:
                         cluster: $cluster$
                         namespace: $nameSpace$
                     data:
                       id_rsa: $b64sshkey$
                     type: Opaque
                   kind: Secret
                   url: /api/v1/namespaces/openunison/secrets
                   srcType: yaml
                   writeToRequest: "false"

             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
                 targetName: $cluster$
                 template: |-
                    kind: Namespace
                    apiVersion: v1
                    metadata:
                      name: "$nameSpace$"
                      labels:
                        name: "$nameSpace$"
                        tremolo.io/request-access: $enableInternal$
                        {{ range $key,$value := .Values.openunison.naas.workflows.new_namespaces.namespace_request_labels }}
                        {{ $key }}: "${{ $value }}$"
                        {{ end }}
                      annotations:
                        tremolo.io/managedByGit: "$useGit$"
                        $gitUrlAnnotation$
                 kind: Namespace
                 url: /api/v1/namespaces
                 srcType: yaml
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-cluster-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/$nameSpace$.yaml

             {{ if .Values.openunison.naas.workflows.new_namespaces.post_namespace_create_workflow }}
             - taskType: callWorkflow
               name: {{ .Values.openunison.naas.workflows.new_namespaces.post_namespace_create_workflow }}
            {{ end }}



             # For GitOps, create a service account and a rolebinding that allow the gitops
             # controller to allow the controller 
             - taskType: ifAttrHasValue
               name: useGit
               value: "true"
               onSuccess:
               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
                 params:
                   targetName: $cluster$
                   template: |-
                       kind: ServiceAccount
                       apiVersion: v1
                       metadata:
                         name: "gitops"
                         namespace: $nameSpace$
                   kind: ServiceAccount
                   url: /api/v1/serviceaccounts
                   srcType: yaml
                   writeToRequest: "true"
                   requestAttribute: git-secret-cluster-$cluster$-$nameSpace$
                   path: /yaml/ns/$nameSpace$/serviceaccounts/gitops.yaml

               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
                 params:
                   targetName: $cluster$
                   template: |-
                      kind: RoleBinding
                      apiVersion: rbac.authorization.k8s.io/v1
                      metadata:
                        name: gitops-controller-sa-binding
                        namespace: "$nameSpace$"
                      subjects:
                      - kind: ServiceAccount
                        name: gitops
                        namespace: $nameSpace$
                      roleRef:
                        kind: ClusterRole
                        name: admin
                        apiGroup: rbac.authorization.k8s.io
                   kind: RoleBinding
                   url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings
                   srcType: yaml
                   writeToRequest: "true"
                   requestAttribute: git-secret-cluster-$cluster$-$nameSpace$
                   path: /yaml/ns/$nameSpace$/rolebindings/gitops-controller-sa-binding.yaml

             {{ if .Values.openunison.naas.groups.internal.enabled }}

             {{ range $role := .Values.openunison.naas.groups.default }}
             {{ range $bind := $role.bindings }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
                 targetName: $cluster$
                 template: |-
                    kind: RoleBinding
                    apiVersion: rbac.authorization.k8s.io/v1
                    metadata:
                      name: {{ $bind.binding }}-binding{{ $root.Values.openunison.naas.groups.internal.suffix }}
                      namespace: "$nameSpace$"
                    subjects:
                    - kind: Group
                      name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.internal.suffix }}
                      apiGroup: rbac.authorization.k8s.io
                    roleRef:
                      kind: {{ $bind.type }}
                      name: {{ $bind.name }}
                      apiGroup: rbac.authorization.k8s.io
                 kind: RoleBinding
                 url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings
                 srcType: yaml
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-namespace-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/rolebindings/{{ $role.name }}-binding{{ $root.Values.openunison.naas.groups.internal.suffix }}.yaml
             {{ end }}
             {{ end }}
             {{ range $role := .Values.openunison.naas.groups.roles }}
             {{ range $bind := $role.bindings }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
                 targetName: $cluster$
                 template: |-
                    kind: RoleBinding
                    apiVersion: rbac.authorization.k8s.io/v1
                    metadata:
                      name: {{ $bind.binding }}-binding{{ $root.Values.openunison.naas.groups.internal.suffix }}
                      namespace: "$nameSpace$"
                    subjects:
                    - kind: Group
                      name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.internal.suffix }}
                      apiGroup: rbac.authorization.k8s.io
                    roleRef:
                      kind: {{ $bind.type }}
                      name: {{ $bind.name }}
                      apiGroup: rbac.authorization.k8s.io
                 kind: RoleBinding
                 url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings
                 srcType: yaml
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-namespace-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/rolebindings/{{ $role.name }}-binding{{ $root.Values.openunison.naas.groups.internal.suffix }}.yaml
             {{ end }}
             {{ end }}
             {{ end }}

             {{ if .Values.openunison.naas.groups.external.enabled }}

             {{ range $role := .Values.openunison.naas.groups.default }}
             {{ range $bind := $role.bindings }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
                 targetName: $cluster$
                 template: |-
                    kind: RoleBinding
                    apiVersion: rbac.authorization.k8s.io/v1
                    metadata:
                      name: {{ $bind.binding }}-binding{{ $root.Values.openunison.naas.groups.external.suffix }}
                      namespace: "$nameSpace$"
                    subjects:
                    - kind: Group
                      name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.external.suffix }}
                      apiGroup: rbac.authorization.k8s.io
                    roleRef:
                      kind: {{ $bind.type }}
                      name: {{ $bind.name }}
                      apiGroup: rbac.authorization.k8s.io
                 kind: RoleBinding
                 url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings
                 srcType: yaml
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-namespace-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/rolebindings/{{ $role.bindingname }}-binding{{ $root.Values.openunison.naas.groups.external.suffix }}.yaml
             {{ end }}
             {{ end }}
             {{ range $role := .Values.openunison.naas.groups.roles }}
             {{ range $bind := $role.bindings }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
                 targetName: $cluster$
                 template: |-
                    kind: RoleBinding
                    apiVersion: rbac.authorization.k8s.io/v1
                    metadata:
                      name: {{ $bind.binding }}-binding{{ $root.Values.openunison.naas.groups.external.suffix }}
                      namespace: "$nameSpace$"
                    subjects:
                    - kind: Group
                      name: k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.external.suffix }}
                      apiGroup: rbac.authorization.k8s.io
                    roleRef:
                      kind: {{ $bind.type }}
                      name: {{ $bind.name }}
                      apiGroup: rbac.authorization.k8s.io
                 kind: RoleBinding
                 url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings
                 srcType: yaml
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-namespace-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/rolebindings/{{ $role.bindingname }}-binding{{ $root.Values.openunison.naas.groups.external.suffix }}.yaml
             {{ end }}
             {{ end }}
             {{ end }}


             - taskType: ifAttrHasValue
               name: useGit
               value: "true"
               onSuccess:
               # GitOps - Run Job to push to cluster repo
               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.PushToGit
                 params:
                   secretName: sshkey-cluster-$cluster$
                   nameSpace: openunison
                   target: k8s
                   keyName: id_rsa
                   gitRepo: $clusterGitUrl$
                   requestObject: git-secret-cluster-$cluster$-$nameSpace$
                   commitMsg: For workflow $WORKFLOW.id$

               # GitOps - Run Job to push to namespace repo
               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.PushToGit
                 params:
                   secretName: sshkey-namespace-$cluster$-$nameSpace$
                   nameSpace: openunison
                   target: k8s
                   keyName: id_rsa
                   gitRepo: $namespaceGitUrl$
                   requestObject: git-secret-namespace-$cluster$-$nameSpace$
                   commitMsg: For workflow $WORKFLOW.id$

               

             - taskType: notifyUser
               subject: Namespace created
               mailAttrib: mail
               msg: Your namespace has been created
{{ end }}