---
apiVersion: openunison.tremolo.io/v1
kind: Application
metadata:
  name: dashboard
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-{{ .Release.Name }}
    app.kubernetes.io/component: openunison-applications
    app.kubernetes.io/part-of: openunison
spec:
  azTimeoutMillis: 3000
  isApp: true
  urls:
  - hosts:
    - "#[K8S_DASHBOARD_HOST]"
    filterChain: 
    - className: com.tremolosecurity.proxy.filters.SetNoCacheHeaders
      params: {}
    {{ if .Values.dashboard.require_session }}
    - className: com.tremolosecurity.proxy.filters.AzFilter
      params:
        rules:
        - "custom;require-session"
        azFail: "force-logout"
    {{ end }}
    {{ if .Values.enable_impersonation }}
    - className: com.tremolosecurity.proxy.filters.K8sInjectImpersonation
      params:
        targetName: k8s
        userNameAttribute: sub
        useLdapGroups: "false"
        groupAttribute: groups
    {{ end }}
    uri: "/"
    proxyTo: https://#[K8S_DASHBOARD_SERVICE:kubernetes-dashboard].#[K8S_DASHBOARD_NAMESPACE:kube-system].svc${fullURI}
    authChain: k8s-db-oidc
    overrideHost: true
    overrideReferer: true
    azRules:
    {{ if .Values.openunison.enable_provisioning }}
    {{ if .Values.openunison.naas.groups.external.enabled }}
    - constraint: (groups=k8s-cluster-k8s-administrators{{ .Values.openunison.naas.groups.external.suffix }})
      scope: filter
    {{ end }}
    {{ if .Values.openunison.naas.groups.internal.enabled }}
    - constraint: (groups=k8s-cluster-k8s-administrators{{ .Values.openunison.naas.groups.internal.suffix }})
      scope: filter
    {{ end }}
    - constraint: (groups=k8s-namespace-administrators-k8s-*)
      scope: filter
    - constraint: (groups=k8s-namespace-viewer-k8s-*)
      scope: filter
    {{ else }}
    {{ $length := len .Values.openunison.az_groups }}
    {{ if eq $length 0 }}
    - scope: dn
      constraint: o=Tremolo
    {{ else }}
    {{ range $az_group := .Values.openunison.az_groups }}
    - scope: filter
      constraint: (groups={{ $az_group }})
    {{ end }}
    {{ end }}
    {{ end }}  
    
    results:
    {{ if not .Values.enable_impersonation }}
      azSuccess: oauth2bearer
    {{ end  }}
      azFail: default-login-failure
      auFail: default-login-failure
    
  - hosts:
    - "#[K8S_DASHBOARD_HOST]"
    filterChain:
    - className: com.tremolosecurity.prelude.filters.StopProcessing
      params: {}
    uri: /logout
    azRules:
    - scope: dn
      constraint: o=Tremolo
    authChain: anon
    results:
      azSuccess: logout
  cookieConfig:
    sessionCookieName: tremolosession
    domain: "#[K8S_DASHBOARD_HOST]"
    secure: true
    httpOnly: true
    logoutURI: "/logout"
    keyAlias: session-unison
    timeout: {{ .Values.network.session_inactivity_timeout_seconds }}
    scope: -1
    cookiesEnabled: true
    