apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: new-k8s-namespace
  namespace: openunison
spec:
  description: Create New Namespace
  inList: false
  label: Create New Namespace
  orgId: 04901973-5f4c-46d9-9e22-55e88e168776
  tasks: |-
           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.CopyFromUserToRequest
             params:
             - name: attribute
               value: nameSpace
             - name: keepInUser
               value: "false"
           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.LoadAttributes
             params:
             - name: nameAttr
               value: uid
             - name: name
               value: givenname
             - name: name
               value: sn
             - name: name
               value: mail
           - taskType: approval
             emailTemplate: A new namespace has been requested
             mailAttr: mail
             failureEmailSubject: Namespace not approved
             failureEmailMsg: |-
               Because:
               ${reason}
             label: Create New Namespace - $nameSpace$
             approvers:
             - scope: group
               constraint: cn=administrators,ou=groups,ou=shadow,o=Tremolo
             onSucess:
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 - name: target
                   value: jitdb
                 - name: name
                   value: approvers-k8s-$nameSpace$
                 - name: attributes
                   value: unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - name: attributes
                   value: unison.group.create.param.2=Approve access to $nameSpace$
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 - name: target
                   value: jitdb
                 - name: name
                   value: k8s-namespace-administrators-$nameSpace$
                 - name: attributes
                   value: unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - name: attributes
                   value: unison.group.create.param.2=Manage kubernetes namespace $nameSpace$
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 - name: target
                   value: jitdb
                 - name: name
                   value: k8s-namespace-viewer-$nameSpace$
                 - name: attributes
                   value: unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - name: attributes
                   value: unison.group.create.param.2=View kubernetes namespace $nameSpace$
             - taskType: mapping
               strict: true
               map:
                 - targetAttributeName: uid
                   targetAttributeSource: uid
                   sourceType: user
               onSuccess:
               - taskType: addGroup
                 name: approvers-k8s-$nameSpace$
                 remove: false
               - taskType: addGroup
                 name: k8s-namespace-administrators-$nameSpace$
                 remove: false
               - taskType: provision
                 sync: false
                 target: jitdb
                 setPassword: false
                 onlyPassedInAttributes: false
                 attributes: ["uid"]
             - taskType: customTaskType
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
               - name: targetName
                 value: k8s
               - name: template
                 value: |-
                    kind: Namespace
                    apiVersion: v1
                    metadata:
                      name: "$nameSpace$"
                      labels:
                        name: "$nameSpace$"
               - name: kind
                 value: Namespace
               - name: url
                 value: /api/v1/namespaces
               - name: srcType
                 value: yaml
             - taskType: customTaskType
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
               - name: targetName
                 value: k8s
               - name: template
                 value: |-
                    kind: RoleBinding
                    apiVersion: rbac.authorization.k8s.io/v1
                    metadata:
                      name: admins-binding
                      namespace: "$nameSpace$"
                    subjects:
                    - kind: Group
                      name: k8s-namespace-administrators-$nameSpace$
                      apiGroup: rbac.authorization.k8s.io
                    roleRef:
                      kind: ClusterRole
                      name: admin
                      apiGroup: rbac.authorization.k8s.io
               - name: kind
                 value: RoleBinding
               - name: url
                 value: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings
               - name: srcType
                 value: yaml
             - taskType: customTaskType
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
               - name: targetName
                 value: k8s
               - name: template
                 value: |-
                   kind: RoleBinding
                   apiVersion: rbac.authorization.k8s.io/v1
                   metadata:
                     name: viewers-binding
                     namespace: "$nameSpace$"
                   subjects:
                   - kind: Group
                     name: k8s-namespace-viewer-$nameSpace$
                     apiGroup: rbac.authorization.k8s.io
                   roleRef:
                     kind: ClusterRole
                     name: view
                     apiGroup: rbac.authorization.k8s.io
               - name: kind
                 value: RoleBinding
               - name: url
                 value: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings
               - name: srcType
                 value: yaml
             - taskType: notifyUser
               subject: Namespace created
               mailAttrib: mail
               msg: Your namespace has been created
                
