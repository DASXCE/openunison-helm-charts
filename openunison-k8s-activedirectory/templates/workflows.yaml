apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: k8s-cluster-admin
  namespace: openunison
spec:
  description: Request this role to become a cluster administrator
  inList: true
  label: $clusterlabel$ Cluster Administrator
  orgId: 441a2bf1-3e47-4d40-a994-99faa15f997a
  dynamicConfiguration:
    dynamic: true
    className: com.tremolosecurity.scalejs.WorkflowListClusters
    params: []
  tasks: |-
           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
             params:
             - name: target
               value: jitdb
             - name: name
               value: k8s-cluster-$cluster$-administrators
             - name: attributes
               value: unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
             - name: attributes
               value: unison.group.create.param.2=Administer $clusterlabel$
           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.LoadAttributes
             params:
             - name: nameAttr
               value: uid
             - name: name
               value: givenname
             - name: name
               value: sn
             - name: name
               value: mail
           - taskType: approval
             label: Approve access for Kubernetes $clusterlabel$ Cluster Administrator
             emailTemplate: There is an open request for cluster administration
             mailAttr: mail
             failureEmailSubject: Access Denied
             failureEmailMsg: |-
                                For this reason:
                                ${reason}
             approvers:
             - scope: group
               constraint: cn=administrators,ou=groups,ou=shadow,o=Tremolo
             onSuccess:
             - taskType: mapping
               strict: true
               map:
               - targetAttributeName: sub
                 sourceType: user
                 targetAttributeSource: uid
               - targetAttributeName: mail
                 sourceType: user
                 targetAttributeSource: mail
               onSuccess:
               - taskType: addGroup
                 name: k8s-cluster-$cluster$-administrators
                 remove: false
               - taskType: provision
                 sync: false
                 target: jitdb
                 setPassword: false
                 onlyPassedInAttributes: false
                 attributes:
                 - sub
               - taskType: notifyUser
                 subject: Access to Cluster Admin Approved
                 mailAttrib: mail
                 msg: Your access has been approved
             onFailure:
             - taskType: mapping
               strict: true
               map:
               - targetAttributeName: sub
                 sourceType: user
                 targetAttributeSource: uid
               - targetAttributeName: mail
                 sourceType: user
                 targetAttributeSource: mail
               onSuccess:
               - taskType: customTask
                 className: com.tremolosecurity.provisioning.customTasks.LoadGroupsFromTarget
                 params:
                 - name: nameAttr
                   value: sub
                 - name: target
                   value: jitdb
               - taskType: addGroup
                 name: k8s-cluster-$cluster$-administrators
                 remove: true
               - taskType: provision
                 sync: true
                 target: jitdb
                 setPassword: false
                 onlyPassedInAttributes: false
                 attributes:
                 - sub 
---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: new-k8s-namespace
  namespace: openunison
spec:
  description: Create New Namespace
  inList: false
  label: Create New Namespace
  orgId: 04901973-5f4c-46d9-9e22-55e88e168776
  tasks: |-
           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.CopyFromUserToRequest
             params:
             - name: attribute
               value: nameSpace
             - name: attribute
               value: cluster
             - name: keepInUser
               value: "false"
           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.LoadAttributes
             params:
             - name: nameAttr
               value: uid
             - name: name
               value: givenname
             - name: name
               value: sn
             - name: name
               value: mail
           - taskType: approval
             emailTemplate: A new namespace has been requested
             mailAttr: mail
             failureEmailSubject: Namespace not approved
             failureEmailMsg: |-
               Because:
               ${reason}
             label: Create New Namespace - $cluster$ - $nameSpace$
             approvers:
             - scope: group
               constraint: cn=administrators,ou=groups,ou=shadow,o=Tremolo
             onSuccess:
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 - name: target
                   value: jitdb
                 - name: name
                   value: approvers-k8s-$cluster$-$nameSpace$
                 - name: attributes
                   value: unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - name: attributes
                   value: unison.group.create.param.2=Approve access to $cluster$ $nameSpace$
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 - name: target
                   value: jitdb
                 - name: name
                   value: k8s-namespace-administrators-$cluster$-$nameSpace$
                 - name: attributes
                   value: unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - name: attributes
                   value: unison.group.create.param.2=Manage kubernetes namespace $cluster$ $nameSpace$
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 - name: target
                   value: jitdb
                 - name: name
                   value: k8s-namespace-viewer-$cluster$-$nameSpace$
                 - name: attributes
                   value: unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - name: attributes
                   value: unison.group.create.param.2=View kubernetes namespace $cluster$ $nameSpace$
             - taskType: mapping
               strict: true
               map:
                 - targetAttributeName: uid
                   targetAttributeSource: uid
                   sourceType: user
               onSuccess:
               - taskType: addGroup
                 name: approvers-k8s-$cluster$-$nameSpace$
                 remove: false
               - taskType: addGroup
                 name: k8s-namespace-administrators-$cluster$-$nameSpace$
                 remove: false
               - taskType: provision
                 sync: false
                 target: jitdb
                 setPassword: false
                 onlyPassedInAttributes: false
                 attributes: ["uid"]
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
               - name: targetName
                 value: $cluster$
               - name: template
                 value: |-
                    kind: Namespace
                    apiVersion: v1
                    metadata:
                      name: "$nameSpace$"
                      labels:
                        name: "$nameSpace$"
               - name: kind
                 value: Namespace
               - name: url
                 value: /api/v1/namespaces
               - name: srcType
                 value: yaml
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
               - name: targetName
                 value: $cluster$
               - name: template
                 value: |-
                    kind: RoleBinding
                    apiVersion: rbac.authorization.k8s.io/v1
                    metadata:
                      name: admins-binding
                      namespace: "$nameSpace$"
                    subjects:
                    - kind: Group
                      name: k8s-namespace-administrators-$cluster$-$nameSpace$
                      apiGroup: rbac.authorization.k8s.io
                    roleRef:
                      kind: ClusterRole
                      name: admin
                      apiGroup: rbac.authorization.k8s.io
               - name: kind
                 value: RoleBinding
               - name: url
                 value: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings
               - name: srcType
                 value: yaml
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
               params:
               - name: targetName
                 value: $cluster$
               - name: template
                 value: |-
                   kind: RoleBinding
                   apiVersion: rbac.authorization.k8s.io/v1
                   metadata:
                     name: viewers-binding
                     namespace: "$nameSpace$"
                   subjects:
                   - kind: Group
                     name: k8s-namespace-viewer-$cluster$-$nameSpace$
                     apiGroup: rbac.authorization.k8s.io
                   roleRef:
                     kind: ClusterRole
                     name: view
                     apiGroup: rbac.authorization.k8s.io
               - name: kind
                 value: RoleBinding
               - name: url
                 value: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings
               - name: srcType
                 value: yaml
             - taskType: notifyUser
               subject: Namespace created
               mailAttrib: mail
               msg: Your namespace has been created
---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: controlplane-cluster-admins
  namespace: openunison
spec:
  description: $openshift_io/description$
  inList: true
  label: $name$ Administrator
  orgId: cecae082-c85d-48df-a837-4726bb755180
  dynamicConfiguration:
    dynamic: true
    className: com.tremolosecurity.unison.openshiftv3.wf.OpenShiftWorkflows
    params:
    - name: target
      value: k8s
    - name: kind
      value: /api/v1/namespaces
    - name: filter
      value: default
    - name: filter
      value: kube-system
    - name: filter
      value: kube-public
  tasks: |-
           - taskType: addAttribute
             name: cluster
             value: k8s
             remove: false
             addToRequest: true
           - taskType: callWorkflow
             name: k8s-namespace-admin
---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: k8s-namespace-admin
  namespace: openunison
  annotations:
    oldorg: "04901973-5f4c-46d9-9e22-55e88e168776"
spec:
  description: k8s-namespace-admin
  inList: false
  label: namespace administrator
  orgId: 04901973-5f4c-46d9-9e22-55e88e168776
  tasks: |-
           - taskType: customTask
             className: com.tremolosecurity.unison.k8s.tasks.DoesGroupExist
             params:
             - name: target
               value: jitdb
             - name: groupName
               value: approvers-k8s-$cluster$-$name$
             - name: attributeName
               value: tremolo.approval.group.exists
           - taskType: ifAttrHasValue
             name: tremolo.approval.group.exists
             value: "false"
             onSuccess:
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 - name: target
                   value: jitdb
                 - name: name
                   value: approvers-k8s-$cluster$-$name$
                 - name: attributes
                   value: unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - name: attributes
                   value: unison.group.create.param.2=Approve access to $cluster$ $nameSpace$
             - taskType: customTask
               className: com.tremolosecurity.unison.k8s.tasks.CopyGroupMembers
               params:
               - name: copyWorkflow
                 value: addApproverUsers
               - name: copyTo
                 value: approvers-k8s-$cluster$-$name$
               - name: copyFrom
                 value: cn=k8s-cluster-$cluster$-administrators,ou=groups,ou=shadow,o=Tremolo
               - name: uidAttributeName
                 value: uid
               - name: requestor
                 value: system
           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.LoadAttributes
             params:
             - name: nameAttr
               value: uid
             - name: name
               value: givenname
             - name: name
               value: sn
             - name: name
               value: mail
           - taskType: approval
             emailTemplate: Approve administrator access to $cluster$ $name$
             mailAttr: mail
             failureEmailSubject: Request denied
             failureEmailMsg: |-
               Because:
               ${reason}
             label: Approve administrator access for $cluster$ - $name$
             approvers:
             - scope: group
               constraint: cn=approvers-k8s-$cluster$-$name$,ou=groups,ou=shadow,o=Tremolo
             onSuccess:
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.AddGroupToStore
               params:
                 - name: target
                   value: jitdb
                 - name: name
                   value: k8s-namespace-administrators-$cluster$-$name$
                 - name: attributes
                   value: unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)
                 - name: attributes
                   value: unison.group.create.param.2=Manage kubernetes namespace $cluster$ $nameSpace$
             
             - taskType: mapping
               strict: true
               map:
                 - targetAttributeName: uid
                   targetAttributeSource: uid
                   sourceType: user
                 - targetAttributeName: mail
                   targetAttributeSource: mail
                   sourceType: user
               onSuccess:
               - taskType: addGroup
                 name: k8s-namespace-administrators-$cluster$-$name$
                 remove: false
               - taskType: provision
                 sync: false
                 target: jitdb
                 setPassword: false
                 onlyPassedInAttributes: false
                 attributes: ["uid"]
               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
                 params:
                 - name: targetName
                   value: $cluster$
                 - name: template
                   value: |-
                    kind: RoleBinding
                    apiVersion: rbac.authorization.k8s.io/v1
                    metadata:
                      name: admins-binding
                      namespace: "$name$"
                    subjects:
                    - kind: Group
                      name: k8s-namespace-administrators-$cluster$-$name$
                      apiGroup: rbac.authorization.k8s.io
                    roleRef:
                      kind: ClusterRole
                      name: admin
                      apiGroup: rbac.authorization.k8s.io
                 - name: kind
                   value: RoleBinding
                 - name: url
                   value: /apis/rbac.authorization.k8s.io/v1/namespaces/$name$/rolebindings
                 - name: srcType
                   value: yaml
               - taskType: notifyUser
                 subject: Admin access to $cluster$ $name$ approved
                 mailAttrib: mail
                 msg: Your access has been approved
             onFailure:
             - taskType: mapping
               strict: true
               map:
                 - targetAttributeName: sub
                   targetAttributeSource: uid
                   sourceType: user
                 - targetAttributeName: mail
                   targetAttributeSource: mail
                   sourceType: user
               onSuccess:
                - taskType: customTask
                  className: com.tremolosecurity.provisioning.customTasks.PrintUserInfo
                  params:
                  - name: message
                    value: failed task
                - taskType: customTask
                  className: com.tremolosecurity.provisioning.customTasks.LoadGroupsFromTarget
                  params:
                  - name: target
                    value: jitdb
                  - name: nameAttr
                    value: sub
                - taskType: addGroup
                  name: k8s-namespace-administrators-$cluster$-$name$
                  remove: true
                - taskType: provision
                  sync: true
                  target: jitdb
                  setPassword: false
                  onlyPassedInAttributes: false
                  attributes: ["uid"]
               

